N = int(input())

# 출력할 알파벳을 순서대로 저장해둔다.
words = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
         'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
         'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
         'Y', 'Z']

# 삼각형을 저장할 이차 배열을 생성한다.
arr = [[0] * N for _ in range(N)]

# 행을 이루는 i값과 열을 이루는 j값의 규칙을 살펴보면 이하와 같다.
# (0, 4) (1, 4) (2, 4) (3, 4) (4, 4)
# (1, 3) (2, 3) (3, 3) (4, 3)
# (2, 2) (3, 2) (4, 2)
# (3, 1) (4, 1)
# (4, 0)
# 따라서 i값의 시작을 의미하는 a를 0으로 정한 뒤, 하나씩 증가시키고
# j값의 끝을 의미하는 b의 시작값을 -1로 둔 뒤, 하나씩 증가시킨다.
a = 0
b = -1
# 26개의 알파벳을 반복적으로 담아야 하므로 count를 활용한다.
count = 0
for i in range(a, N):
    for j in range(N-1, b, -1):
        arr[i][j] = words[count % 26]
        # i 값을 하나씩 증가시킨다.
        i += 1
        count += 1
    # 하나의 구간이 모두 채워졌으면, 열의 마지막을 의미하는 b의 값을 하나씩 증가시켜 범위를 조정한다.
    b += 1

# arr[i][j]의 값이 0일 경우 공백을 출력한다.
for i in range(N):
    for j in range(N):
        if arr[i][j] == 0:
            print(" ", end=" ")
        else:
            print(arr[i][j], end=" ")
    print()